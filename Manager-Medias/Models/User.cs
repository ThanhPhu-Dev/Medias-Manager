//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Manager_Medias.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.Text.RegularExpressions;

    public partial class User : IDataErrorInfo, INotifyPropertyChanged
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public User()
        {
            this.Payment_History = new HashSet<Payment_History>();
            this.Profiles = new HashSet<Profile>();
        }

        public string _Email;
        public string Email
        {
            set
            {
                if (value != _Email)
                {
                    _Email = value;
                    OnPropertyChanged("Email");
                }
            }
            get { return _Email; }
        }
        public string _Password;
        public string Password
        {
            set
            {
                if (value != _Password)
                {
                    _Password = value;
                    OnPropertyChanged("Password");
                }
            }
            get { return _Password; }
        }
        public Nullable<int> _Level;
        public int Level
        {
            set
            {
                if (value != _Level)
                {
                    _Level = value;
                    OnPropertyChanged("Level");
                }
            }
            get { return (int)_Level; }
        }
        public string _Code;
        public string Code
        {
            set
            {
                if (value != _Code)
                {
                    _Code = value;
                    OnPropertyChanged("Code");
                }
            }
            get { return _Code; }
        }
        public string _NumberCard;
        public string NumberCard
        {
            set
            {
                if (value != _NumberCard)
                {
                    _NumberCard = value;
                    OnPropertyChanged("NumberCard");
                }
            }
            get { return _NumberCard; }
        }

        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Payment_History> Payment_History { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Profile> Profiles { get; set; }



        public string Error
        {
            get { throw new NotImplementedException(); }
        }
        string _pattern = @"\A(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?)\Z";

        

        public string this[string columnName]
        {
            get
            {
                string result = String.Empty;
                switch (columnName)
                {
                    case "Email":
                        if (Email.Length < 1)
                        {
                            result = "Lỗi nhập liệu: Không được bỏ trống trường này!";
                        }
                        else
                        {
                            if (!Regex.IsMatch(Email, _pattern))
                            {
                                result = "Lỗi nhập liệu: Email không hợp lệ!";
                            }
                        }
                        break;
                    case "Password":
                        if (Password.Length < 8 && Password.Length > 0)
                        {
                            result = "Lỗi nhập liệu: Password quá ngắn!";
                        }
                        break;
                    case "Code":
                        if (Code.Length < 5 && Code.Length > 0)
                        {
                            result = "Lỗi nhập liệu: Code phải trên 5 ký tự!";
                        }
                        break;
                    case "NumberCard":
                        if (NumberCard.Length <= 13 && NumberCard.Length > 0)
                        {
                            result = "Lỗi nhập liệu: Số thẻ phải trên 13 ký tự!";
                        }
                        break;
                    case "Level":
                        try
                        {
                            int p = int.Parse(Level.ToString());
                        }
                        catch
                        {
                            result = "Lỗi nhập liệu: Nhập ký tự ngoài chữ số!";
                            return result;
                        }
                        if (String.IsNullOrEmpty(Level.ToString()))
                        {
                            result = "Lỗi nhập liệu: Chưa nhập liệu!";
                        }
                        break;
                }

                return result;
            }
        }

        public event PropertyChangedEventHandler PropertyChanged;
        public void OnPropertyChanged(string property)
        {
            if (PropertyChanged != null)
            {
                PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(property));
            }
        }
    }
}
